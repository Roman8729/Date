#include <iostream>  // Подключение библиотеки для работы с вводом-выводом
#include <string>    // Подключение библиотеки для работы со строками
#include <vector>    // Подключение библиотеки для работы с векторами

class Date {  // Объявление класса Date
private:  // Секция приватных полей и методов класса
    int day;  // Поле для хранения дня
    int month;  // Поле для хранения месяца
    int year;  // Поле для хранения года
    std::vector<std::string> months = {"января", "февраля", "марта", "апреля", "мая", "июня", "июля", "августа", "сентября", "октября", "ноября", "декабря"};  // Вектор с названиями месяцев

public:  // Секция публичных полей и методов класса
    Date(int d, int m, int y) {  // Конструктор класса, принимающий день, месяц и год
        set_day(d);  // Установка дня
        set_month(m);  // Установка месяца
        set_year(y);  // Установка года
    }

    void set_day(int d) {  // Метод для установки дня
        if (d >= 1 && d <= 31) {  // Проверка корректности дня
            day = d;  // Установка дня
        } else {
            throw std::invalid_argument("День должен быть в диапазоне от 1 до 31");  // Генерация исключения при некорректном дне
        }
    }

    void set_month(int m) {  // Метод для установки месяца
        if (m >= 1 && m <= 12) {  // Проверка корректности месяца
            month = m;  // Установка месяца
        } else {
            throw std::invalid_argument("Месяц должен быть в диапазоне от 1 до 12");  // Генерация исключения при некорректном месяце
        }
    }

    void set_year(int y) {  // Метод для установки года
        if (y > 0) {  // Проверка корректности года
            year = y;  // Установка года
        } else {
            throw std::invalid_argument("Год должен быть положительным числом");  // Генерация исключения при некорректном годе
        }
    }

    int get_day() {  // Метод для получения дня
        return day;  // Возврат дня
    }

    int get_month() {  // Метод для получения месяца
        return month;  // Возврат месяца
    }

    int get_year() {  // Метод для получения года
        return year;  // Возврат года
    }

    void print_date() {  // Метод для печати даты в формате "5 января 1997 года"
        std::cout << day << " " << months[month - 1] << " " << year << " года" << std::endl;  // Вывод даты
    }

    void print_date_numbers() {  // Метод для печати даты в формате "05.01.1997"
        printf("%02d.%02d.%d\n", day, month, year);  // Вывод даты
    }
};  // Завершение объявления класса

int main() {   // ДЛЯ ПРИМЕРА 5.01.1997.
    Date date(5, 1, 1997);
    date.print_date();  // Печать по шаблону: “5 января 1997 года”
    date.print_date_numbers();  // Печать по шаблону: “05.01.1997”
    return 0;
}
